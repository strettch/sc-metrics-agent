# beta.yml - Beta Release Workflow
name: Beta Release

on:
  push:
    branches: [main]
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.github/workflows/release.yml'
  workflow_dispatch:
    inputs:
      reason:
        description: 'Reason for manual release'
        required: false
        default: 'Manual release trigger'

env:
  GO_VERSION: '1.25'
  DEBIAN_FRONTEND: noninteractive

jobs:
  beta-release:
    name: Build and Deploy Beta
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: write
    outputs:
      version: ${{ steps.version.outputs.version }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}
        cache: true
    
    - name: Cache build dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Generate beta version
      id: version
      run: |
        chmod +x .github/scripts/generate-version.sh
        VERSION=$(.github/scripts/generate-version.sh beta)
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "::notice::Generated beta version: $VERSION"
    
    - name: Build binary
      run: |
        make build VERSION=${{ steps.version.outputs.version }}
        # Verify binary was created
        test -f build/sc-metrics-agent || exit 1

    - name: Setup packaging environment
      run: |
        # Install FPM
        sudo apt-get update -qq
        sudo apt-get install -yqq ruby ruby-dev build-essential
        sudo gem install --no-document fpm
    
    - name: Build package
      run: |
        VERSION="${{ steps.version.outputs.version }}"
        ./.github/scripts/build-package.sh "$VERSION" "beta"
        # Verify package was created
        test -f "sc-metrics-agent_${VERSION}_amd64.deb" || exit 1
    
    - name: Generate changelog
      id: changelog
      run: |
        chmod +x .github/scripts/generate-changelog.sh
        {
          echo 'changelog<<EOF'
          .github/scripts/generate-changelog.sh beta
          echo 'EOF'
        } >> $GITHUB_OUTPUT
    
    - name: Create and push tag
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git tag -a "${{ steps.version.outputs.version }}" \
          -m "Beta release ${{ steps.version.outputs.version }}"
        git push origin "${{ steps.version.outputs.version }}"

    - name: Deploy to repository server
      env:
        DEPLOY_KEY: ${{ secrets.REPO_SSH_KEY }}
        REPO_HOST: ${{ secrets.REPO_HOST }}
        REPO_USER: ${{ secrets.REPO_USER }}
      run: |
        ./.github/scripts/deploy-to-repo.sh \
          "${{ steps.version.outputs.version }}" \
          "beta" \
          "$DEPLOY_KEY" \
          "$REPO_HOST" \
          "$REPO_USER"
    
    - name: Create GitHub pre-release
      uses: ncipollo/release-action@v1
      with:
        tag: ${{ steps.version.outputs.version }}
        name: "Beta ${{ steps.version.outputs.version }}"
        body: |
          ## üöÄ Beta Release
          
          This is an automated beta release from the main branch.
          
          ${{ steps.changelog.outputs.changelog }}
          
          **‚ö†Ô∏è Note:** This is a beta release for testing purposes.
        prerelease: true
        artifacts: "sc-metrics-agent_*.deb"
        token: ${{ secrets.GITHUB_TOKEN }}